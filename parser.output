Terminals unused in grammar

    USTAR
    UMINUS


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: struct_specifier
    2                 | function_definition
    3                 | translation_unit struct_specifier
    4                 | translation_unit function_definition

    5 $@1: ε

    6 struct_specifier: STRUCT IDENTIFIER $@1 '{' declaration_list '}' ';'

    7 $@2: ε

    8 function_definition: type_specifier fun_declarator $@2 compound_statement

    9 type_specifier: VOID
   10               | INT
   11               | FLOAT
   12               | STRUCT IDENTIFIER

   13 fun_declarator: IDENTIFIER '(' parameter_list ')'
   14               | IDENTIFIER '(' ')'

   15 parameter_list: parameter_declaration
   16               | parameter_list ',' parameter_declaration

   17 parameter_declaration: type_specifier declarator

   18 declarator_arr: IDENTIFIER
   19               | declarator_arr '[' INT_CONSTANT ']'

   20 declarator: declarator_arr
   21           | '*' declarator

   22 declaration_list: declaration
   23                 | declaration_list declaration

   24 declaration: type_specifier declarator_list ';'

   25 declarator_list: declarator
   26                | declarator_list ',' declarator

   27 compound_statement: '{' '}'
   28                   | '{' statement_list '}'
   29                   | '{' declaration_list '}'
   30                   | '{' declaration_list statement_list '}'

   31 statement_list: statement
   32               | statement_list statement

   33 statement: ';'
   34          | '{' statement_list '}'
   35          | selection_statement
   36          | iteration_statement
   37          | assignment_statement
   38          | procedure_call
   39          | RETURN expression ';'

   40 assignment_expression: unary_expression '=' expression

   41 assignment_statement: assignment_expression ';'

   42 procedure_call: IDENTIFIER '(' ')' ';'
   43               | IDENTIFIER '(' expression_list ')' ';'

   44 expression: logical_and_expression
   45           | expression OR_OP logical_and_expression

   46 logical_and_expression: equality_expression
   47                       | logical_and_expression AND_OP equality_expression

   48 equality_expression: relational_expression
   49                    | equality_expression EQ_OP relational_expression
   50                    | equality_expression NE_OP relational_expression

   51 relational_expression: additive_expression
   52                      | relational_expression '<' additive_expression
   53                      | relational_expression '>' additive_expression
   54                      | relational_expression LE_OP additive_expression
   55                      | relational_expression GE_OP additive_expression

   56 additive_expression: multiplicative_expression
   57                    | additive_expression '+' multiplicative_expression
   58                    | additive_expression '-' multiplicative_expression

   59 unary_expression: postfix_expression
   60                 | unary_operator unary_expression

   61 multiplicative_expression: unary_expression
   62                          | multiplicative_expression '*' unary_expression
   63                          | multiplicative_expression '/' unary_expression

   64 postfix_expression: primary_expression
   65                   | postfix_expression '[' expression ']'
   66                   | IDENTIFIER '(' ')'
   67                   | IDENTIFIER '(' expression_list ')'
   68                   | postfix_expression '.' IDENTIFIER
   69                   | postfix_expression PTR_OP IDENTIFIER
   70                   | postfix_expression INC_OP

   71 primary_expression: IDENTIFIER
   72                   | INT_CONSTANT
   73                   | FLOAT_CONSTANT
   74                   | STRING_LITERAL
   75                   | '(' expression ')'

   76 expression_list: expression
   77                | expression_list ',' expression

   78 unary_operator: '-'
   79               | '!'
   80               | '&'
   81               | '*'

   82 selection_statement: IF '(' expression ')' statement ELSE statement

   83 iteration_statement: WHILE '(' expression ')' statement
   84                    | FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 79
    '&' (38) 80
    '(' (40) 13 14 42 43 66 67 75 82 83 84
    ')' (41) 13 14 42 43 66 67 75 82 83 84
    '*' (42) 21 62 81
    '+' (43) 57
    ',' (44) 16 26 77
    '-' (45) 58 78
    '.' (46) 68
    '/' (47) 63
    ';' (59) 6 24 33 39 41 42 43 84
    '<' (60) 52
    '=' (61) 40
    '>' (62) 53
    '[' (91) 19 65
    ']' (93) 19 65
    '{' (123) 6 27 28 29 30 34
    '}' (125) 6 27 28 29 30 34
    error (256)
    VOID (258) 9
    INT (259) 10
    FLOAT (260) 11
    RETURN (261) 39
    WHILE (262) 83
    FOR (263) 84
    IF (264) 82
    ELSE (265) 82
    OR_OP (266) 45
    STRUCT (267) 6 12
    IDENTIFIER <std::string> (268) 6 12 13 14 18 42 43 66 67 68 69 71
    INT_CONSTANT <std::string> (269) 19 72
    FLOAT_CONSTANT <std::string> (270) 73
    STRING_LITERAL <std::string> (271) 74
    AND_OP (272) 47
    EQ_OP (273) 49
    NE_OP (274) 50
    LE_OP (275) 54
    GE_OP (276) 55
    USTAR (277)
    UMINUS (278)
    PTR_OP (279) 69
    INC_OP (280) 70


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    translation_unit <abstract_astnode*> (45)
        on left: 1 2 3 4
        on right: 0 3 4
    struct_specifier <abstract_astnode*> (46)
        on left: 6
        on right: 1 3
    $@1 (47)
        on left: 5
        on right: 6
    function_definition <abstract_astnode*> (48)
        on left: 8
        on right: 2 4
    $@2 (49)
        on left: 7
        on right: 8
    type_specifier <type_specifier_class*> (50)
        on left: 9 10 11 12
        on right: 8 17 24
    fun_declarator <fun_declarator_class*> (51)
        on left: 13 14
        on right: 8
    parameter_list <parameter_list_class*> (52)
        on left: 15 16
        on right: 13 16
    parameter_declaration <parameter_declaration_class*> (53)
        on left: 17
        on right: 15 16
    declarator_arr <declarator_class*> (54)
        on left: 18 19
        on right: 19 20
    declarator <declarator_class*> (55)
        on left: 20 21
        on right: 17 21 25 26
    declaration_list <declaration_list_class*> (56)
        on left: 22 23
        on right: 6 23 29 30
    declaration <declaration_class*> (57)
        on left: 24
        on right: 22 23
    declarator_list <declarator_list_class*> (58)
        on left: 25 26
        on right: 24 26
    compound_statement <abstract_astnode*> (59)
        on left: 27 28 29 30
        on right: 8
    statement_list <seq_astnode*> (60)
        on left: 31 32
        on right: 28 30 32 34
    statement <statement_astnode*> (61)
        on left: 33 34 35 36 37 38 39
        on right: 31 32 82 83 84
    assignment_expression <assignE_astnode*> (62)
        on left: 40
        on right: 41 84
    assignment_statement <assignS_astnode*> (63)
        on left: 41
        on right: 37
    procedure_call <funcall_astnode*> (64)
        on left: 42 43
        on right: 38
    expression <exp_astnode*> (65)
        on left: 44 45
        on right: 39 40 45 65 75 76 77 82 83 84
    logical_and_expression <exp_astnode*> (66)
        on left: 46 47
        on right: 44 45 47
    equality_expression <exp_astnode*> (67)
        on left: 48 49 50
        on right: 46 47 49 50
    relational_expression <exp_astnode*> (68)
        on left: 51 52 53 54 55
        on right: 48 49 50 52 53 54 55
    additive_expression <exp_astnode*> (69)
        on left: 56 57 58
        on right: 51 52 53 54 55 57 58
    unary_expression <exp_astnode*> (70)
        on left: 59 60
        on right: 40 60 61 62 63
    multiplicative_expression <exp_astnode*> (71)
        on left: 61 62 63
        on right: 56 57 58 62 63
    postfix_expression <exp_astnode*> (72)
        on left: 64 65 66 67 68 69 70
        on right: 59 65 68 69 70
    primary_expression <exp_astnode*> (73)
        on left: 71 72 73 74 75
        on right: 64
    expression_list <funcall_astnode*> (74)
        on left: 76 77
        on right: 43 67 77
    unary_operator <op_unary_astnode*> (75)
        on left: 78 79 80 81
        on right: 60
    selection_statement <statement_astnode*> (76)
        on left: 82
        on right: 35
    iteration_statement <statement_astnode*> (77)
        on left: 83 84
        on right: 36


State 0

    0 $accept: • translation_unit $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    translation_unit     go to state 5
    struct_specifier     go to state 6
    function_definition  go to state 7
    type_specifier       go to state 8


State 1

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 2

   10 type_specifier: INT •

    $default  reduce using rule 10 (type_specifier)


State 3

   11 type_specifier: FLOAT •

    $default  reduce using rule 11 (type_specifier)


State 4

    6 struct_specifier: STRUCT • IDENTIFIER $@1 '{' declaration_list '}' ';'
   12 type_specifier: STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 9


State 5

    0 $accept: translation_unit • $end
    3 translation_unit: translation_unit • struct_specifier
    4                 | translation_unit • function_definition

    $end    shift, and go to state 10
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    struct_specifier     go to state 11
    function_definition  go to state 12
    type_specifier       go to state 8


State 6

    1 translation_unit: struct_specifier •

    $default  reduce using rule 1 (translation_unit)


State 7

    2 translation_unit: function_definition •

    $default  reduce using rule 2 (translation_unit)


State 8

    8 function_definition: type_specifier • fun_declarator $@2 compound_statement

    IDENTIFIER  shift, and go to state 13

    fun_declarator  go to state 14


State 9

    6 struct_specifier: STRUCT IDENTIFIER • $@1 '{' declaration_list '}' ';'
   12 type_specifier: STRUCT IDENTIFIER •

    IDENTIFIER  reduce using rule 12 (type_specifier)
    $default    reduce using rule 5 ($@1)

    $@1  go to state 15


State 10

    0 $accept: translation_unit $end •

    $default  accept


State 11

    3 translation_unit: translation_unit struct_specifier •

    $default  reduce using rule 3 (translation_unit)


State 12

    4 translation_unit: translation_unit function_definition •

    $default  reduce using rule 4 (translation_unit)


State 13

   13 fun_declarator: IDENTIFIER • '(' parameter_list ')'
   14               | IDENTIFIER • '(' ')'

    '('  shift, and go to state 16


State 14

    8 function_definition: type_specifier fun_declarator • $@2 compound_statement

    $default  reduce using rule 7 ($@2)

    $@2  go to state 17


State 15

    6 struct_specifier: STRUCT IDENTIFIER $@1 • '{' declaration_list '}' ';'

    '{'  shift, and go to state 18


State 16

   13 fun_declarator: IDENTIFIER '(' • parameter_list ')'
   14               | IDENTIFIER '(' • ')'

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19
    ')'     shift, and go to state 20

    type_specifier         go to state 21
    parameter_list         go to state 22
    parameter_declaration  go to state 23


State 17

    8 function_definition: type_specifier fun_declarator $@2 • compound_statement

    '{'  shift, and go to state 24

    compound_statement  go to state 25


State 18

    6 struct_specifier: STRUCT IDENTIFIER $@1 '{' • declaration_list '}' ';'

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19

    type_specifier    go to state 26
    declaration_list  go to state 27
    declaration       go to state 28


State 19

   12 type_specifier: STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 29


State 20

   14 fun_declarator: IDENTIFIER '(' ')' •

    $default  reduce using rule 14 (fun_declarator)


State 21

   17 parameter_declaration: type_specifier • declarator

    IDENTIFIER  shift, and go to state 30
    '*'         shift, and go to state 31

    declarator_arr  go to state 32
    declarator      go to state 33


State 22

   13 fun_declarator: IDENTIFIER '(' parameter_list • ')'
   16 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 34
    ','  shift, and go to state 35


State 23

   15 parameter_list: parameter_declaration •

    $default  reduce using rule 15 (parameter_list)


State 24

   27 compound_statement: '{' • '}'
   28                   | '{' • statement_list '}'
   29                   | '{' • declaration_list '}'
   30                   | '{' • declaration_list statement_list '}'

    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    STRUCT          shift, and go to state 19
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '}'             shift, and go to state 46
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    type_specifier         go to state 26
    declaration_list       go to state 52
    declaration            go to state 28
    statement_list         go to state 53
    statement              go to state 54
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 25

    8 function_definition: type_specifier fun_declarator $@2 compound_statement •

    $default  reduce using rule 8 (function_definition)


State 26

   24 declaration: type_specifier • declarator_list ';'

    IDENTIFIER  shift, and go to state 30
    '*'         shift, and go to state 31

    declarator_arr   go to state 32
    declarator       go to state 64
    declarator_list  go to state 65


State 27

    6 struct_specifier: STRUCT IDENTIFIER $@1 '{' declaration_list • '}' ';'
   23 declaration_list: declaration_list • declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19
    '}'     shift, and go to state 66

    type_specifier  go to state 26
    declaration     go to state 67


State 28

   22 declaration_list: declaration •

    $default  reduce using rule 22 (declaration_list)


State 29

   12 type_specifier: STRUCT IDENTIFIER •

    $default  reduce using rule 12 (type_specifier)


State 30

   18 declarator_arr: IDENTIFIER •

    $default  reduce using rule 18 (declarator_arr)


State 31

   21 declarator: '*' • declarator

    IDENTIFIER  shift, and go to state 30
    '*'         shift, and go to state 31

    declarator_arr  go to state 32
    declarator      go to state 68


State 32

   19 declarator_arr: declarator_arr • '[' INT_CONSTANT ']'
   20 declarator: declarator_arr •

    '['  shift, and go to state 69

    $default  reduce using rule 20 (declarator)


State 33

   17 parameter_declaration: type_specifier declarator •

    $default  reduce using rule 17 (parameter_declaration)


State 34

   13 fun_declarator: IDENTIFIER '(' parameter_list ')' •

    $default  reduce using rule 13 (fun_declarator)


State 35

   16 parameter_list: parameter_list ',' • parameter_declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19

    type_specifier         go to state 21
    parameter_declaration  go to state 70


State 36

   39 statement: RETURN • expression ';'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 72
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 37

   83 iteration_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 79


State 38

   84 iteration_statement: FOR • '(' assignment_expression ';' expression ';' assignment_expression ')' statement

    '('  shift, and go to state 80


State 39

   82 selection_statement: IF • '(' expression ')' statement ELSE statement

    '('  shift, and go to state 81


State 40

   42 procedure_call: IDENTIFIER • '(' ')' ';'
   43               | IDENTIFIER • '(' expression_list ')' ';'
   66 postfix_expression: IDENTIFIER • '(' ')'
   67                   | IDENTIFIER • '(' expression_list ')'
   71 primary_expression: IDENTIFIER •

    '('  shift, and go to state 82

    $default  reduce using rule 71 (primary_expression)


State 41

   72 primary_expression: INT_CONSTANT •

    $default  reduce using rule 72 (primary_expression)


State 42

   73 primary_expression: FLOAT_CONSTANT •

    $default  reduce using rule 73 (primary_expression)


State 43

   74 primary_expression: STRING_LITERAL •

    $default  reduce using rule 74 (primary_expression)


State 44

   75 primary_expression: '(' • expression ')'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 83
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 45

   34 statement: '{' • statement_list '}'

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement_list         go to state 84
    statement              go to state 54
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 46

   27 compound_statement: '{' '}' •

    $default  reduce using rule 27 (compound_statement)


State 47

   79 unary_operator: '!' •

    $default  reduce using rule 79 (unary_operator)


State 48

   33 statement: ';' •

    $default  reduce using rule 33 (statement)


State 49

   78 unary_operator: '-' •

    $default  reduce using rule 78 (unary_operator)


State 50

   81 unary_operator: '*' •

    $default  reduce using rule 81 (unary_operator)


State 51

   80 unary_operator: '&' •

    $default  reduce using rule 80 (unary_operator)


State 52

   23 declaration_list: declaration_list • declaration
   29 compound_statement: '{' declaration_list • '}'
   30                   | '{' declaration_list • statement_list '}'

    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    STRUCT          shift, and go to state 19
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '}'             shift, and go to state 85
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    type_specifier         go to state 26
    declaration            go to state 67
    statement_list         go to state 86
    statement              go to state 54
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 53

   28 compound_statement: '{' statement_list • '}'
   32 statement_list: statement_list • statement

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '}'             shift, and go to state 87
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 88
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 54

   31 statement_list: statement •

    $default  reduce using rule 31 (statement_list)


State 55

   41 assignment_statement: assignment_expression • ';'

    ';'  shift, and go to state 89


State 56

   37 statement: assignment_statement •

    $default  reduce using rule 37 (statement)


State 57

   38 statement: procedure_call •

    $default  reduce using rule 38 (statement)


State 58

   40 assignment_expression: unary_expression • '=' expression

    '='  shift, and go to state 90


State 59

   59 unary_expression: postfix_expression •
   65 postfix_expression: postfix_expression • '[' expression ']'
   68                   | postfix_expression • '.' IDENTIFIER
   69                   | postfix_expression • PTR_OP IDENTIFIER
   70                   | postfix_expression • INC_OP

    '['     shift, and go to state 91
    PTR_OP  shift, and go to state 92
    '.'     shift, and go to state 93
    INC_OP  shift, and go to state 94

    $default  reduce using rule 59 (unary_expression)


State 60

   64 postfix_expression: primary_expression •

    $default  reduce using rule 64 (postfix_expression)


State 61

   60 unary_expression: unary_operator • unary_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    unary_expression    go to state 95
    postfix_expression  go to state 59
    primary_expression  go to state 60
    unary_operator      go to state 61


State 62

   35 statement: selection_statement •

    $default  reduce using rule 35 (statement)


State 63

   36 statement: iteration_statement •

    $default  reduce using rule 36 (statement)


State 64

   25 declarator_list: declarator •

    $default  reduce using rule 25 (declarator_list)


State 65

   24 declaration: type_specifier declarator_list • ';'
   26 declarator_list: declarator_list • ',' declarator

    ','  shift, and go to state 96
    ';'  shift, and go to state 97


State 66

    6 struct_specifier: STRUCT IDENTIFIER $@1 '{' declaration_list '}' • ';'

    ';'  shift, and go to state 98


State 67

   23 declaration_list: declaration_list declaration •

    $default  reduce using rule 23 (declaration_list)


State 68

   21 declarator: '*' declarator •

    $default  reduce using rule 21 (declarator)


State 69

   19 declarator_arr: declarator_arr '[' • INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 99


State 70

   16 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 16 (parameter_list)


State 71

   66 postfix_expression: IDENTIFIER • '(' ')'
   67                   | IDENTIFIER • '(' expression_list ')'
   71 primary_expression: IDENTIFIER •

    '('  shift, and go to state 100

    $default  reduce using rule 71 (primary_expression)


State 72

   39 statement: RETURN expression • ';'
   45 expression: expression • OR_OP logical_and_expression

    OR_OP  shift, and go to state 101
    ';'    shift, and go to state 102


State 73

   44 expression: logical_and_expression •
   47 logical_and_expression: logical_and_expression • AND_OP equality_expression

    AND_OP  shift, and go to state 103

    $default  reduce using rule 44 (expression)


State 74

   46 logical_and_expression: equality_expression •
   49 equality_expression: equality_expression • EQ_OP relational_expression
   50                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 104
    NE_OP  shift, and go to state 105

    $default  reduce using rule 46 (logical_and_expression)


State 75

   48 equality_expression: relational_expression •
   52 relational_expression: relational_expression • '<' additive_expression
   53                      | relational_expression • '>' additive_expression
   54                      | relational_expression • LE_OP additive_expression
   55                      | relational_expression • GE_OP additive_expression

    '<'    shift, and go to state 106
    LE_OP  shift, and go to state 107
    '>'    shift, and go to state 108
    GE_OP  shift, and go to state 109

    $default  reduce using rule 48 (equality_expression)


State 76

   51 relational_expression: additive_expression •
   57 additive_expression: additive_expression • '+' multiplicative_expression
   58                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 51 (relational_expression)


State 77

   61 multiplicative_expression: unary_expression •

    $default  reduce using rule 61 (multiplicative_expression)


State 78

   56 additive_expression: multiplicative_expression •
   62 multiplicative_expression: multiplicative_expression • '*' unary_expression
   63                          | multiplicative_expression • '/' unary_expression

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113

    $default  reduce using rule 56 (additive_expression)


State 79

   83 iteration_statement: WHILE '(' • expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 114
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 80

   84 iteration_statement: FOR '(' • assignment_expression ';' expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    assignment_expression  go to state 115
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61


State 81

   82 selection_statement: IF '(' • expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 116
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 82

   42 procedure_call: IDENTIFIER '(' • ')' ';'
   43               | IDENTIFIER '(' • expression_list ')' ';'
   66 postfix_expression: IDENTIFIER '(' • ')'
   67                   | IDENTIFIER '(' • expression_list ')'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    ')'             shift, and go to state 117
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 118
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    expression_list            go to state 119
    unary_operator             go to state 61


State 83

   45 expression: expression • OR_OP logical_and_expression
   75 primary_expression: '(' expression • ')'

    OR_OP  shift, and go to state 101
    ')'    shift, and go to state 120


State 84

   32 statement_list: statement_list • statement
   34 statement: '{' statement_list • '}'

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '}'             shift, and go to state 121
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 88
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 85

   29 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 29 (compound_statement)


State 86

   30 compound_statement: '{' declaration_list statement_list • '}'
   32 statement_list: statement_list • statement

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '}'             shift, and go to state 122
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 88
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 87

   28 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 28 (compound_statement)


State 88

   32 statement_list: statement_list statement •

    $default  reduce using rule 32 (statement_list)


State 89

   41 assignment_statement: assignment_expression ';' •

    $default  reduce using rule 41 (assignment_statement)


State 90

   40 assignment_expression: unary_expression '=' • expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 123
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 91

   65 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 124
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 92

   69 postfix_expression: postfix_expression PTR_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 125


State 93

   68 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 126


State 94

   70 postfix_expression: postfix_expression INC_OP •

    $default  reduce using rule 70 (postfix_expression)


State 95

   60 unary_expression: unary_operator unary_expression •

    $default  reduce using rule 60 (unary_expression)


State 96

   26 declarator_list: declarator_list ',' • declarator

    IDENTIFIER  shift, and go to state 30
    '*'         shift, and go to state 31

    declarator_arr  go to state 32
    declarator      go to state 127


State 97

   24 declaration: type_specifier declarator_list ';' •

    $default  reduce using rule 24 (declaration)


State 98

    6 struct_specifier: STRUCT IDENTIFIER $@1 '{' declaration_list '}' ';' •

    $default  reduce using rule 6 (struct_specifier)


State 99

   19 declarator_arr: declarator_arr '[' INT_CONSTANT • ']'

    ']'  shift, and go to state 128


State 100

   66 postfix_expression: IDENTIFIER '(' • ')'
   67                   | IDENTIFIER '(' • expression_list ')'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    ')'             shift, and go to state 129
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 118
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    expression_list            go to state 130
    unary_operator             go to state 61


State 101

   45 expression: expression OR_OP • logical_and_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    logical_and_expression     go to state 131
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 102

   39 statement: RETURN expression ';' •

    $default  reduce using rule 39 (statement)


State 103

   47 logical_and_expression: logical_and_expression AND_OP • equality_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    equality_expression        go to state 132
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 104

   49 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    relational_expression      go to state 133
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 105

   50 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    relational_expression      go to state 134
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 106

   52 relational_expression: relational_expression '<' • additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    additive_expression        go to state 135
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 107

   54 relational_expression: relational_expression LE_OP • additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    additive_expression        go to state 136
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 108

   53 relational_expression: relational_expression '>' • additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    additive_expression        go to state 137
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 109

   55 relational_expression: relational_expression GE_OP • additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    additive_expression        go to state 138
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 110

   57 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    unary_expression           go to state 77
    multiplicative_expression  go to state 139
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 111

   58 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    unary_expression           go to state 77
    multiplicative_expression  go to state 140
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 112

   62 multiplicative_expression: multiplicative_expression '*' • unary_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    unary_expression    go to state 141
    postfix_expression  go to state 59
    primary_expression  go to state 60
    unary_operator      go to state 61


State 113

   63 multiplicative_expression: multiplicative_expression '/' • unary_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    unary_expression    go to state 142
    postfix_expression  go to state 59
    primary_expression  go to state 60
    unary_operator      go to state 61


State 114

   45 expression: expression • OR_OP logical_and_expression
   83 iteration_statement: WHILE '(' expression • ')' statement

    OR_OP  shift, and go to state 101
    ')'    shift, and go to state 143


State 115

   84 iteration_statement: FOR '(' assignment_expression • ';' expression ';' assignment_expression ')' statement

    ';'  shift, and go to state 144


State 116

   45 expression: expression • OR_OP logical_and_expression
   82 selection_statement: IF '(' expression • ')' statement ELSE statement

    OR_OP  shift, and go to state 101
    ')'    shift, and go to state 145


State 117

   42 procedure_call: IDENTIFIER '(' ')' • ';'
   66 postfix_expression: IDENTIFIER '(' ')' •

    ';'  shift, and go to state 146

    $default  reduce using rule 66 (postfix_expression)


State 118

   45 expression: expression • OR_OP logical_and_expression
   76 expression_list: expression •

    OR_OP  shift, and go to state 101

    $default  reduce using rule 76 (expression_list)


State 119

   43 procedure_call: IDENTIFIER '(' expression_list • ')' ';'
   67 postfix_expression: IDENTIFIER '(' expression_list • ')'
   77 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 147
    ','  shift, and go to state 148


State 120

   75 primary_expression: '(' expression ')' •

    $default  reduce using rule 75 (primary_expression)


State 121

   34 statement: '{' statement_list '}' •

    $default  reduce using rule 34 (statement)


State 122

   30 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 30 (compound_statement)


State 123

   40 assignment_expression: unary_expression '=' expression •
   45 expression: expression • OR_OP logical_and_expression

    OR_OP  shift, and go to state 101

    $default  reduce using rule 40 (assignment_expression)


State 124

   45 expression: expression • OR_OP logical_and_expression
   65 postfix_expression: postfix_expression '[' expression • ']'

    OR_OP  shift, and go to state 101
    ']'    shift, and go to state 149


State 125

   69 postfix_expression: postfix_expression PTR_OP IDENTIFIER •

    $default  reduce using rule 69 (postfix_expression)


State 126

   68 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 68 (postfix_expression)


State 127

   26 declarator_list: declarator_list ',' declarator •

    $default  reduce using rule 26 (declarator_list)


State 128

   19 declarator_arr: declarator_arr '[' INT_CONSTANT ']' •

    $default  reduce using rule 19 (declarator_arr)


State 129

   66 postfix_expression: IDENTIFIER '(' ')' •

    $default  reduce using rule 66 (postfix_expression)


State 130

   67 postfix_expression: IDENTIFIER '(' expression_list • ')'
   77 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 150
    ','  shift, and go to state 148


State 131

   45 expression: expression OR_OP logical_and_expression •
   47 logical_and_expression: logical_and_expression • AND_OP equality_expression

    AND_OP  shift, and go to state 103

    $default  reduce using rule 45 (expression)


State 132

   47 logical_and_expression: logical_and_expression AND_OP equality_expression •
   49 equality_expression: equality_expression • EQ_OP relational_expression
   50                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 104
    NE_OP  shift, and go to state 105

    $default  reduce using rule 47 (logical_and_expression)


State 133

   49 equality_expression: equality_expression EQ_OP relational_expression •
   52 relational_expression: relational_expression • '<' additive_expression
   53                      | relational_expression • '>' additive_expression
   54                      | relational_expression • LE_OP additive_expression
   55                      | relational_expression • GE_OP additive_expression

    '<'    shift, and go to state 106
    LE_OP  shift, and go to state 107
    '>'    shift, and go to state 108
    GE_OP  shift, and go to state 109

    $default  reduce using rule 49 (equality_expression)


State 134

   50 equality_expression: equality_expression NE_OP relational_expression •
   52 relational_expression: relational_expression • '<' additive_expression
   53                      | relational_expression • '>' additive_expression
   54                      | relational_expression • LE_OP additive_expression
   55                      | relational_expression • GE_OP additive_expression

    '<'    shift, and go to state 106
    LE_OP  shift, and go to state 107
    '>'    shift, and go to state 108
    GE_OP  shift, and go to state 109

    $default  reduce using rule 50 (equality_expression)


State 135

   52 relational_expression: relational_expression '<' additive_expression •
   57 additive_expression: additive_expression • '+' multiplicative_expression
   58                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 52 (relational_expression)


State 136

   54 relational_expression: relational_expression LE_OP additive_expression •
   57 additive_expression: additive_expression • '+' multiplicative_expression
   58                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 54 (relational_expression)


State 137

   53 relational_expression: relational_expression '>' additive_expression •
   57 additive_expression: additive_expression • '+' multiplicative_expression
   58                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 53 (relational_expression)


State 138

   55 relational_expression: relational_expression GE_OP additive_expression •
   57 additive_expression: additive_expression • '+' multiplicative_expression
   58                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 55 (relational_expression)


State 139

   57 additive_expression: additive_expression '+' multiplicative_expression •
   62 multiplicative_expression: multiplicative_expression • '*' unary_expression
   63                          | multiplicative_expression • '/' unary_expression

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113

    $default  reduce using rule 57 (additive_expression)


State 140

   58 additive_expression: additive_expression '-' multiplicative_expression •
   62 multiplicative_expression: multiplicative_expression • '*' unary_expression
   63                          | multiplicative_expression • '/' unary_expression

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113

    $default  reduce using rule 58 (additive_expression)


State 141

   62 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 62 (multiplicative_expression)


State 142

   63 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 63 (multiplicative_expression)


State 143

   83 iteration_statement: WHILE '(' expression ')' • statement

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 151
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 144

   84 iteration_statement: FOR '(' assignment_expression ';' • expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 152
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 145

   82 selection_statement: IF '(' expression ')' • statement ELSE statement

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 153
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 146

   42 procedure_call: IDENTIFIER '(' ')' ';' •

    $default  reduce using rule 42 (procedure_call)


State 147

   43 procedure_call: IDENTIFIER '(' expression_list ')' • ';'
   67 postfix_expression: IDENTIFIER '(' expression_list ')' •

    ';'  shift, and go to state 154

    $default  reduce using rule 67 (postfix_expression)


State 148

   77 expression_list: expression_list ',' • expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    expression                 go to state 155
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 59
    primary_expression         go to state 60
    unary_operator             go to state 61


State 149

   65 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 65 (postfix_expression)


State 150

   67 postfix_expression: IDENTIFIER '(' expression_list ')' •

    $default  reduce using rule 67 (postfix_expression)


State 151

   83 iteration_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 83 (iteration_statement)


State 152

   45 expression: expression • OR_OP logical_and_expression
   84 iteration_statement: FOR '(' assignment_expression ';' expression • ';' assignment_expression ')' statement

    OR_OP  shift, and go to state 101
    ';'    shift, and go to state 156


State 153

   82 selection_statement: IF '(' expression ')' statement • ELSE statement

    ELSE  shift, and go to state 157


State 154

   43 procedure_call: IDENTIFIER '(' expression_list ')' ';' •

    $default  reduce using rule 43 (procedure_call)


State 155

   45 expression: expression • OR_OP logical_and_expression
   77 expression_list: expression_list ',' expression •

    OR_OP  shift, and go to state 101

    $default  reduce using rule 77 (expression_list)


State 156

   84 iteration_statement: FOR '(' assignment_expression ';' expression ';' • assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '!'             shift, and go to state 47
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    assignment_expression  go to state 158
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61


State 157

   82 selection_statement: IF '(' expression ')' statement ELSE • statement

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 159
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 158

   84 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression • ')' statement

    ')'  shift, and go to state 160


State 159

   82 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  reduce using rule 82 (selection_statement)


State 160

   84 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' • statement

    RETURN          shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    IDENTIFIER      shift, and go to state 40
    INT_CONSTANT    shift, and go to state 41
    FLOAT_CONSTANT  shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    '('             shift, and go to state 44
    '{'             shift, and go to state 45
    '!'             shift, and go to state 47
    ';'             shift, and go to state 48
    '-'             shift, and go to state 49
    '*'             shift, and go to state 50
    '&'             shift, and go to state 51

    statement              go to state 161
    assignment_expression  go to state 55
    assignment_statement   go to state 56
    procedure_call         go to state 57
    unary_expression       go to state 58
    postfix_expression     go to state 59
    primary_expression     go to state 60
    unary_operator         go to state 61
    selection_statement    go to state 62
    iteration_statement    go to state 63


State 161

   84 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement •

    $default  reduce using rule 84 (iteration_statement)
